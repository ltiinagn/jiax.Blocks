module compare (
    input alufn[6],       
    input z,
    input v,
    input n,
    output c_out[16]
  ) 
  {
  
  sig out;
  
  always {
    case(alufn[2:1]){         //MUX alufn[2:1] are select signals 
      default:
        out = b0;
      b01:                    //alufn[2:1]=01, check a==b
        out = z;
      b10:                    //alufn[2:1]=10, check a<b
        out = v^n;            
      b11:                    //alufn[2:1]=11, check a<=b
        out = (n^v)|z;
    }
    c_out[15:1] = 15b0;       //only need last bit for result (1:true or 0:false)
    c_out[0] = out;
  }
}
